version: '3'
services:
    association-db:
        image: postgres:15.0-alpine
        environment:
            PGUSER: 'postgres'
            POSTGRES_DB: 'postgres'
            POSTGRES_USER: 'postgres'
            POSTGRES_PASSWORD: 'password'
        ports:
            - "5432:5432"
        healthcheck:
            test: ["CMD-SHELL", "pg_isready", "-U postgres"]
            interval: 30s
            timeout: 10s
            retries: 5
        volumes:
            # DB content
            - association-data:/var/lib/postgresql/data
            # Initial schemas
            - ./sql/create_schemas.sql:/docker-entrypoint-initdb.d/create_schemas.sql
    association-backend:
        build:
            context: ../
            dockerfile: ./docker/Dockerfile
        ports:
            - "8080:8080"
            - "8000:8000"
        depends_on:
            association-db:
                condition: service_healthy
        links:
            - "association-db"
        env_file:
            - .env
        environment:
            # Activates profile
            - spring.profiles.active=dev
            # Logs
            - logging.file.path=./logs
            - logging.level.com.bernardomg=DEBUG
            # JDBC
            - spring.datasource.url=jdbc:postgresql://association-db:5432/postgres
            - spring.datasource.username=postgres
            - spring.datasource.password=password
            # CORS
            - cors.origins=http://localhost:4200
            # JWT
            - security.jwt.secret=1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890
            # Token
            - security.token.validity=86400000
            # Email
            - spring.mail.host=${MAIL_HOST}
            - spring.mail.port=${MAIL_PORT}
            - spring.mail.username=${MAIL_USERNAME}
            - spring.mail.password=${MAIL_PASSWORD}
            - security.email.from=${SECURITY_EMAIL_FROM}
            - security.email.passwordRecoveryUrl=http://localhost:4200/password_reset/
        volumes:
            - association-logs:/logs
volumes:
    association-data:
    association-logs: